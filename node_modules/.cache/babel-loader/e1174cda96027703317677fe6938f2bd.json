{"ast":null,"code":"var _jsxFileName = \"/home/admi/Table/src/Login.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Redirect, Link } from 'react-router-dom';\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`;\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`;\nconst Button = styled.button`\ngrid-area: 3/1/4/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`;\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`;\nconst Response = styled.p`\ncolor: red;\ngrid-area: 5/1/6/3;\nmargin: auto;\n`;\nconst Success = styled(Response)`\ncolor: green;\n`;\nconst ResetPswd = styled(Link)`\ngrid-area: 4/1/5/3;\nmargin: auto;\n`;\n\nfunction Login() {\n  const isLoggedIn = window.localStorage.getItem('session');\n  let active;\n  const [values, setValues] = useState({\n    email: '',\n    pswd: ''\n  });\n  const [successMsg, setSuccessMsg] = useState('');\n  const [resMsg, setResMsg] = useState('');\n  const [isRedirect, setRedirect] = useState(false);\n\n  if (isLoggedIn) {\n    active = true;\n  }\n\n  const handleInput = e => {\n    e.persist();\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    setResMsg('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const obj = {\n      email: values.email,\n      pswd: values.pswd\n    };\n    login('http://localhost:5000/login', obj);\n    setValues({\n      email: '',\n      pswd: ''\n    });\n  };\n\n  const login = async (url, data) => {\n    const response = await window.fetch(url, {\n      method: 'Post',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    console.log('result from login', result);\n\n    if (result.msg) {\n      setResMsg(result);\n    }\n\n    if (result.success) {\n      setSuccessMsg(result.success);\n      console.log('session', result.sessionObj);\n      window.localStorage.setItem('session', JSON.stringify(result.sessionObj));\n      setTimeout(() => setRedirect(true), 1000);\n      setResMsg('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, active && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 18\n    }\n  }), !active && /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    value: values.email,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pswd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Password :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"pswd\",\n    id: \"pswd\",\n    required: true,\n    value: values.pswd,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(ResetPswd, {\n    to: \"pswdSet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Forgot Password\"), resMsg && /*#__PURE__*/React.createElement(Response, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, resMsg.msg), successMsg && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, successMsg), isRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 34\n    }\n  }))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/admi/Table/src/Login.js"],"names":["React","useState","styled","Redirect","Link","Heading","h1","Form","form","Button","button","Input","input","Response","p","Success","ResetPswd","Login","isLoggedIn","window","localStorage","getItem","active","values","setValues","email","pswd","successMsg","setSuccessMsg","resMsg","setResMsg","isRedirect","setRedirect","handleInput","e","persist","target","name","value","handleSubmit","preventDefault","obj","login","url","data","response","fetch","method","body","JSON","stringify","headers","result","json","console","log","msg","success","sessionObj","setItem","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Redirect, Link } from 'react-router-dom'\n\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`\nconst Button = styled.button`\ngrid-area: 3/1/4/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`\nconst Response = styled.p`\ncolor: red;\ngrid-area: 5/1/6/3;\nmargin: auto;\n`\nconst Success = styled(Response)`\ncolor: green;\n`\nconst ResetPswd = styled(Link)`\ngrid-area: 4/1/5/3;\nmargin: auto;\n`\n\nfunction Login () {\n  const isLoggedIn = window.localStorage.getItem('session')\n  let active\n  const [values, setValues] = useState({\n    email: '',\n    pswd: ''\n  })\n\n  const [successMsg, setSuccessMsg] = useState('')\n  const [resMsg, setResMsg] = useState('')\n  const [isRedirect, setRedirect] = useState(false)\n  if (isLoggedIn) {\n    active = true\n  }\n\n  const handleInput = e => {\n    e.persist()\n    setValues({ ...values, [e.target.name]: e.target.value })\n    setResMsg('')\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const obj = {\n      email: values.email,\n      pswd: values.pswd\n    }\n    login('http://localhost:5000/login', obj)\n    setValues({\n      email: '',\n      pswd: ''\n    })\n  }\n\n  const login = async (url, data) => {\n    const response = await window.fetch(url, {\n      method: 'Post',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const result = await response.json()\n    console.log('result from login', result)\n    if (result.msg) {\n      setResMsg(result)\n    }\n    if (result.success) {\n      setSuccessMsg(result.success)\n      console.log('session', result.sessionObj)\n      window.localStorage.setItem('session', JSON.stringify(result.sessionObj))\n      setTimeout(() => setRedirect(true), 1000)\n      setResMsg('')\n    }\n  }\n\n  return (\n    <>\n      {active && <Redirect to='/app' />}\n      {!active &&\n        <main>\n          <header>\n            <Heading>Login</Heading>\n          </header>\n          <section>\n            <Form onSubmit={handleSubmit}>\n              <label htmlFor='email'>Email :</label>\n              <Input\n                type='email'\n                placeholder='Enter your email'\n                name='email' id='email'\n                required\n                value={values.email}\n                onChange={handleInput}\n              />\n              <label htmlFor='pswd'>Password :</label>\n              <Input\n                type='password'\n                placeholder='Enter Password'\n                name='pswd' id='pswd'\n                required\n                value={values.pswd}\n                onChange={handleInput}\n              />\n              <Button>Submit</Button>\n              <ResetPswd to='pswdSet'>Forgot Password</ResetPswd>\n              {resMsg &&\n                <Response>{resMsg.msg}</Response>}\n              {successMsg &&\n                <>\n                  <Success>{successMsg}</Success>\n                  {isRedirect && <Redirect to='/app' />}\n                </>}\n\n            </Form>\n          </section>\n        </main>}\n\n    </>\n  )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}