{"ast":null,"code":"var _jsxFileName = \"/home/admi/Table/src/ResetPswd.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom';\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`;\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`;\nconst Button = styled.button`\ngrid-area: 4/1/5/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`;\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`;\nconst Response = styled.p`\ncolor: red;\ngrid-area: 5/1/6/3;\nmargin: auto;\n`;\nconst Success = styled(Response)`\ncolor: green;\n`;\n\nfunction ResetPswd() {\n  const [values, setValues] = useState({\n    email: '',\n    pswd: '',\n    cpswd: ''\n  });\n  const [isErr, setErr] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleInput = e => {\n    e.persist();\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    resetPswd('http://localhost:5000/resetPswd', values);\n    setValues({\n      email: '',\n      pswd: '',\n      cpswd: ''\n    });\n  };\n\n  const resetPswd = async (url, data) => {\n    const response = await window.fetch(url, {\n      body: JSON.stringify(data),\n      method: 'Put',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n\n    if (result.err) {\n      setErr(result.err);\n    }\n\n    if (result.msg) {\n      setSuccess(result.msg);\n      setTimeout(() => setRedirect(true), 1000);\n      setErr('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    value: values.email,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pswd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Enter Password :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    name: \"pswd\",\n    id: \"pswd\",\n    required: true,\n    value: values.pswd,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cpswd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Confirm Password :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"cpswd\",\n    id: \"cpswd\",\n    required: true,\n    value: values.cpswd,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Reset\"), isErr && /*#__PURE__*/React.createElement(Response, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, isErr), success && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, success), isRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 30\n    }\n  })))));\n}\n\nexport default ResetPswd;","map":{"version":3,"sources":["/home/admi/Table/src/ResetPswd.js"],"names":["React","useState","styled","Redirect","Heading","h1","Form","form","Button","button","Input","input","Response","p","Success","ResetPswd","values","setValues","email","pswd","cpswd","isErr","setErr","success","setSuccess","isRedirect","setRedirect","handleInput","e","persist","target","name","value","handleSubmit","preventDefault","resetPswd","url","data","response","window","fetch","body","JSON","stringify","method","headers","result","json","err","msg","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Redirect } from 'react-router-dom'\n\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`\nconst Button = styled.button`\ngrid-area: 4/1/5/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`\nconst Response = styled.p`\ncolor: red;\ngrid-area: 5/1/6/3;\nmargin: auto;\n`\nconst Success = styled(Response)`\ncolor: green;\n`\n\nfunction ResetPswd () {\n  const [values, setValues] = useState({\n    email: '',\n    pswd: '',\n    cpswd: ''\n  })\n  const [isErr, setErr] = useState('')\n  const [success, setSuccess] = useState('')\n  const [isRedirect, setRedirect] = useState(false)\n\n  const handleInput = e => {\n    e.persist()\n    setValues({ ...values, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    resetPswd('http://localhost:5000/resetPswd', values)\n    setValues({\n      email: '',\n      pswd: '',\n      cpswd: ''\n    })\n  }\n\n  const resetPswd = async (url, data) => {\n    const response = await window.fetch(url, {\n      body: JSON.stringify(data),\n      method: 'Put',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const result = await response.json()\n    if (result.err) {\n      setErr(result.err)\n    }\n    if (result.msg) {\n      setSuccess(result.msg)\n      setTimeout(() => setRedirect(true), 1000)\n      setErr('')\n    }\n  }\n\n  return (\n    <main>\n      <header>\n        <Heading>Reset Password</Heading>\n      </header>\n      <section>\n        <Form onSubmit={handleSubmit}>\n          <label htmlFor='email'>Email :</label>\n          <Input\n            type='email'\n            placeholder='Enter your email'\n            name='email' id='email'\n            required\n            value={values.email}\n            onChange={handleInput}\n          />\n          <label htmlFor='pswd'>Enter Password :</label>\n          <Input\n            type='password'\n            placeholder='Enter password'\n            name='pswd' id='pswd'\n            required\n            value={values.pswd}\n            onChange={handleInput}\n          />\n          <label htmlFor='cpswd'>Confirm Password :</label>\n          <Input\n            type='password'\n            placeholder='Confirm Password'\n            name='cpswd' id='cpswd'\n            required\n            value={values.cpswd}\n            onChange={handleInput}\n          />\n          <Button>Reset</Button>\n          {isErr &&\n            <Response>{isErr}</Response>}\n          {success &&\n            <>\n              <Success>{success}</Success>\n              {isRedirect && <Redirect to='/login' />}\n\n            </>}\n        </Form>\n      </section>\n    </main>\n  )\n}\n\nexport default ResetPswd\n"]},"metadata":{},"sourceType":"module"}