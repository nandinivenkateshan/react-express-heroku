{"ast":null,"code":"var _jsxFileName = \"/home/admi/Table/src/ForgotPswd.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`;\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`;\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`;\nconst Button = styled.button`\ngrid-area: 3/1/4/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`;\nconst Response = styled.p`\ncolor: red;\ngrid-area: 4/1/5/3;\nmargin: auto;\n`;\nconst Success = styled(Response)`\ncolor: green;\n`;\n\nfunction ForgotPswd() {\n  const [email, setEmail] = useState('');\n  const [isErr, setErr] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    resetPswd('http://localhost:5000/forgotPswd', {\n      email\n    });\n  };\n\n  const resetPswd = async (url, email) => {\n    const response = await window.fetch(url, {\n      method: 'Post',\n      body: JSON.stringify(email),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n\n    if (result.err) {\n      setErr(result.err);\n    }\n\n    if (result.msg) {\n      setSuccess(result.msg);\n      setErr('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Email :\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    value: email,\n    onChange: handleEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Reset\"), isErr && /*#__PURE__*/React.createElement(Response, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, isErr), success && /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, success))));\n}\n\nexport default ForgotPswd;","map":{"version":3,"sources":["/home/admi/Table/src/ForgotPswd.js"],"names":["React","useState","styled","Heading","h1","Form","form","Input","input","Button","button","Response","p","Success","ForgotPswd","email","setEmail","isErr","setErr","success","setSuccess","handleEmail","e","target","value","handleSubmit","preventDefault","resetPswd","url","response","window","fetch","method","body","JSON","stringify","headers","result","json","err","msg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Heading = styled.h1`\nmargin-top: 50px;\ntext-align: center;\n`\nconst Form = styled.form`\nborder: 1px solid grey;\ndisplay: grid;\ngrid-template-columns: 150px 300px;\ngrid-row-gap: 20px;\npadding: 40px 20px 20px 20px;\nwidth: 500px;\nmargin:100px auto;\n`\nconst Input = styled.input`\npadding: 10px;\nborder-radius: 50px; \nborder: 1px solid grey;\n`\nconst Button = styled.button`\ngrid-area: 3/1/4/3;\nwidth: 100px;\nmargin:auto;\ncolor: #388f38;\nborder: none;\npadding: 10px;\nborder-radius: 30px;\nfont-weight: bold;\nbackground-color: #ddcfcf;\nbox-shadow: 3px 2px grey;\n`\nconst Response = styled.p`\ncolor: red;\ngrid-area: 4/1/5/3;\nmargin: auto;\n`\nconst Success = styled(Response)`\ncolor: green;\n`\n\nfunction ForgotPswd () {\n  const [email, setEmail] = useState('')\n  const [isErr, setErr] = useState('')\n  const [success, setSuccess] = useState('')\n\n  const handleEmail = e => {\n    setEmail(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    resetPswd('http://localhost:5000/forgotPswd', { email })\n  }\n\n  const resetPswd = async (url, email) => {\n    const response = await window.fetch(url, {\n      method: 'Post',\n      body: JSON.stringify(email),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const result = await response.json()\n    if (result.err) {\n      setErr(result.err)\n    }\n    if (result.msg) {\n      setSuccess(result.msg)\n      setErr('')\n    }\n  }\n  return (\n    <main>\n      <header>\n        <Heading>Reset Password</Heading>\n      </header>\n      <section>\n        <Form onSubmit={handleSubmit}>\n          <label htmlFor='email'>Email :</label>\n          <Input\n            type='email'\n            placeholder='Enter your email'\n            name='email' id='email'\n            required\n            value={email}\n            onChange={handleEmail}\n          />\n          <Button>Reset</Button>\n          {isErr &&\n            <Response>{isErr}</Response>}\n          {success &&\n            <Success>{success}</Success>}\n\n        </Form>\n      </section>\n\n    </main>\n  )\n}\n\nexport default ForgotPswd\n"]},"metadata":{},"sourceType":"module"}